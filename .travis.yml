sudo: required
branches:
  only:
  - master
  - docker-rework
services:
- docker
env:
  global:
  - IMAGE_NAME=675906086666.dkr.ecr.us-west-2.amazonaws.com/planet-snowcover:latest
  - DOCKERHUB_IMAGE_NAME="tonycannistra/planet-snowcover:latest"
  - secure: FLs0oWya43hMJbuoLB5UKHDGYeYGpPhRKmkCfnDIc9PeLHhmS2zB8Sk8vogtlSxquFGnSC6aSOKceK/DOb1jkR/kQxc0rOb7yU11McGEUOrAQk+hXiEArvAwMonjT4kucldY6oWYXFfIp9Nt/FnMD3foe954dqQC2kBIme2OAjxtQVMb4P9uRpxq26CfzfT4SR/cx7AX1pfVbuDVnxS6qVxUZOw4sCT3UP4hpj99B6aWsoBklihwpsQomcU9/Ob3Icxum0h37WdGI1VT2uUJB3gHbOiwAx4ME3aft3eVGFjl+ba52++NOXlCUJoZc6fx81b5HVDRLYj+KSwzi2OiVwYZPaEd989bYG07MPludIPX3td6950q4qkj92JBpddzB83oUtUB6FxUk/TQ7fmHSTZN+xsfPeWwY/dOKDt3JZ8fGTdt1/i8W2d1doOPuOqt6rexfNuzGr2BbVHgkD24CEruICV3ELczoCXru72AcFimnAPI6Kmap/Fmkw+fKe2SbYkAQB/CDK0VIm3A7pYMSiUTHIW8NEVF6cMOoKzXngWK0CUnL7q0HEFMHe8cjsMTgOHqBq6ll/yj04JU+9pjIEPLWHtWctq6eqMn1VGWu+N9e/wBYx8GEggMD29v0yO9sROzdZIwtjYzTP48qJKBCYRFsUM6T/r+I1oP94lSSD0=
  - secure: B4vRUBdA3nUfcQh0IB1PkDpFaSTFyXp3rjImAobNwFiQY1yqcqNqOSvRRkY2F8PdkKEPsHY2hsK058mFKeiTLHaZoNTRD4urs42wOih3M9RhopRsRNkAIdL/ymvirZPNNRSQAfTipMrlzguZFoiYkPqALNOHn9LT5fSZt40rbkrELSzo9k/GcRdZnk7JCM1HP4VNBv6mNKW6NVHkt+zd+blMVMYv3IQJSAI+5wDRJKrLWiErqYqV/Nzy7ESslBZpUDq4SSfk0yv4GMfgUnw0mEkH34KPpqYrngZDh0Odeuh0+MtVlyaVmfygp3Czqlkoa+WNXc6JB8kt/ygRizLIQBwABmQvyyOk+uUQmNCCjyzy3dBAnd5YFUvh9qOs6MT6u1WYMZKG/wlD8A+NknQ1wmCe1vsOgDJWLBz4YKoiHJ0ILydLrw7qT/QfHy0WjemKL8BMyMwTRl4NMASRLcIvxdHcy8IL6DBehlI7tDn/vncEZokBwb22dFgkxvDPmGf41V+JaunAcIlh3YMxygug+umQb95mTPwgMDWaTAv1jrkQU6mwxGozXw8/pHukSwLO7Uz10AkUKBhjLzcuLkDlfa4OLYxRZzNETL6PupeVz33PYvbM2zdDAYOnf4tBbuQhYg+emXk0OVtdJlezVfZdme7AxoYEFLYCYkKqxwrZEoc=
  - secure: jM8ocUTGXLk0JN89r993WrI7p8TLzW49n73FCzN4UZym9+09LkWE02M5SntvGTbfSi6bY8cjurrXDxIKENwIuyk47VPZ8ZbjDKGasduac9LrKu2AtU+zPeeuNlWFiop+dUELdPux2ZkMr/W8zjir7DGZwbYeKsocMF5FzC1KhR4X5SMjpfysv1jNJ5rN1Nl6iKEhvJ40u9I9uVwi92DR1AOUZez8U0QQMTFoR4nA91BJ8lm+BGOen4Lmx1GaVPjBTXwaLfv+/1bJVhA7ubcgwGrvqcCQdTz7a7hHCX468tKaqlZ00nYfljGPHmLS85PY7cGZJfYCyKJqDByNYmBoieAcjV4zAXYEF6dZnqq5z1QuZeji4Hk9wogzjsDejBWQfKF4jDMHEROhhl4XcEqL6q0kWtI4v2U3IruFyzehodh96T74Gx3dncaP/FKuN2WwW9tsQb9w7nj36ctgt/o1Zuz512aHiDe3xLPHsPwbeyNoPkwXxkIFPL6nw++rnbvcomu9b+rZL8+6hoZaDhaw+i2IPjLVtArzZdUEP0Fk6RrEHoV2jxMN/qB244Z5mJ2r3PlXOtoHy7V+PC/vv2gObLUVbsxYcH/imvEs7tv58TY+fm+wzQL3sZo7tEO3Mbj0Ck0DzHuakGRDWLFDIGTZDBLx1zoVp3b4kzcp2bxdp7I=
  - secure: ApcJLkq1fppz9zi54DMoKGmbVRyUsVM017UJI4o389n4SUsOfXjdVaJo5PSQX6FuJtvhbj/3NZ9No4rFp5FpaeZD5S7hMalAwWj9ss8CsNv6P42jQaQMufYNj7zh9nfQ6yHJJOQhnfIJ9dnalsLF8liC4/4Du1TE49Bjr6zMKg3IB09JZeRkFQmEyi09VjXgVFScxrl4v3gALzDGJl06HZrLJf4zN0VPR3yfRxz3kiWujfbGXpuBc8IpQPhRYD5U/oKggJdS5BxuEsCnXN2TzVF38aSIJsZRuevBC3yy2UzOblkTl1mlBjCW+nmNQ+ggIM6tValfCSKoW7CmKdJS2qkT09J5aDmikrwpk9HlXdL9grtWKGJP+ySPFyAy2pZ9FVc2ZmTNnFyu0OKoqMeeYts1gTvYBMCUs6R8d4yKX8IF1C7qWuCXpwwyR5UaahbKPuTduua0CboKcaxtio7Nn3xvKyK6bVDd5nM7OUki/cfmYZ5Wf6MY67MhCZzcU2LGZt9/QEk4QNSU6MRW3O6NRsCXR7HH+/u1WrR31zO3xNu9eie3bhD6YoSQ5IniZUgnsPy35F3a6BCfQjD0H0UnmUl+w7yWvOxVotKPT01Ey4hX4hSIxhQf/SjHZDvkVohOZrD0W2Ok3HRFN2lT5IvYmSIPFRkIkfKpbP1VfalCP8Q=
before_script:
- docker pull "$IMAGE_NAME" || true
script:
- if test -z "$AWS_ACCESS_KEY_ID"; then echo "AWS ACCESS KEY empty"; fi;
- if test -z "$AWS_SECRET_ACCESS_KEY"; then echo "AWS SECRET empty"; fi;
- bash ./environment/create-aws-creds.sh
- stat ./environment/aws_config
- docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" --file environment/Dockerfile
  .
after_script:
- docker images
after_success:
- docker --version
- pip install --user awscli
- aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
- aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
- aws configure set default.region us-west-2
- export PATH=$PATH:$HOME/.local/bin
- eval $(aws ecr get-login --no-include-email --region us-west-2)
- docker push "$IMAGE_NAME"
- docker logout
- docker login --username=${DOCKERHUB_USER} --password=${DOCKERHUB_PASS}
- docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_NAME
- docker push "$DOCKERHUB_IMAGE_NAME"
